set nocompatible  " be iMproved, required 
filetype off                  

filetype plugin indent on    

" GENERAL setup
colorscheme zenburn
let g:airline_theme='powerlineish'
" colorscheme molokai

" todo command
command Todo noautocmd vimgrep /TODO/j **/*.tex **/*.md | cw
command Fixme noautocmd vimgrep /fxnote/j **/*.tex | cw

" Sweet search options!
set incsearch
set hlsearch

set encoding=utf-8
set number
set colorcolumn=80
set tags=tags

" Alias some stupid bugs
:command W w
:command Xa xa

if $TERM == 'screen'
  set t_Co=256
endif

set wrap linebreak nolist 

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Set indent guides
let g:indent_guides_guide_size = 1
let g:indent_guides_color_change_percent = 3
let g:indent_guides_enable_on_vim_startup = 1

" Setup for snippets
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
let g:UltiSnipsEditSplit="vertical" 

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
" Turn off YCM for Tex and Markdown
let g:ycm_filetype_blacklist = {
      \ 'markdown': 1,
      \ 'tex': 1,
      \ 'text': 1
      \}

" Setup for vimtex
let g:syntastic_tex_chktex_quiet_messages = { "level":"warnings"}
let g:vimtex_fold_enabled = 1
let g:vimtex_indent_enabled = 1
let g:vimtex_toc_enabled = 1

let g:vimtex_compiler_method='latexmk'
let g:tex_flavor = 'latex'
let g:vimtex_compiler_latexmk = {
        \ 'build_dir' : './tex',
        \ 'options' : [
        \   '-pdf',
        \   '-verbose',
        \   '-file-line-error',
        \   '-synctex=1',
        \   '-interaction=nonstopmode',
        \ ],
        \}

" Setup for plasticboy/vim-markdown
set conceallevel=2
let g:vim_markdown_math = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_toc_autofit = 1

" Setup for JamshedVesuna/vim-markdown-preview
" Map markdown preview to CTRL-M
let vim_markdown_preview_hotkey='<C-M>'
" Use grip for markdown preview
let vim_markdown_preview_github=1

" Setup for sql formatter
let g:sql_type_default = 'pgsql'

" Setup for syntax checkers
" let g:pymode_lint_ignore = " Use for ignoring vertain errors
let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe']
let g:pymode_lint_on_write = 1
let g:pymode_virtualenv = 1
let g:pymode_python = 'python3'

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_sh_checkers=['bashate']

nnoremap <silent> <F5> :SyntasticToggle<CR>

" Use spaces instead of tabs, and keep the whitespace small
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
set backspace=2 " make backspace work like most other apps

" Switch between splits using ctr+j/k/l/h
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Keep visual mode after indent
vnoremap > >gv
vnoremap < <gv

" Mappings for CtrlSF
nmap     <C-F>f <Plug>CtrlSFPrompt
vmap     <C-F>f <Plug>CtrlSFVwordPath
vmap     <C-F>F <Plug>CtrlSFVwordExec
nmap     <C-F>n <Plug>CtrlSFCwordPath
nmap     <C-F>p <Plug>CtrlSFPwordPath
nnoremap <C-F>o :CtrlSFOpen<CR>
nnoremap <C-F>t :CtrlSFToggle<CR>
inoremap <C-F>t <Esc>:CtrlSFToggle<CR>

let g:sw_exe = '/home/moberst/sqlworkbench/sqlwbconsole.sh'
let g:sw_config_dir = '/home/moberst/sqlworkbench/'
let g:ctrlp_extensions=['sw_profiles']

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

" NERDtree settings
" Toggle Nerdtree with C-T
map <C-T> :NERDTreeToggle<CR>
" Close Vim if the only window open is nerdtree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Latex setup
au BufNewFile,BufRead *.tex
    \ set spelllang=en | 
    \ set spellfile=$HOME/Dropbox/org/tex/en.utf-8.add |
    \ set spell

" PYTHON setup
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" Ensures that the autocomplete window goes away when youâ€™re done with it
let g:ycm_autoclose_preview_window_after_insertion=1
let g:ycm_autoclose_preview_window_after_completion=1
let g:syntastic_python_checkers=['flake8', 'pyflakes']
let g:syntastic_aggregate_errors = 1

let g:pymode_breakpoint_bind = '<leader>b'

" Turn off python mode linting, duplicates with syntastic
" let g:pymode_lint_on_write = 0

" Define a shortcut for goto definition.
" map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

let python_highlight_all=1
syntax on


