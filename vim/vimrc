set nocompatible  " be iMproved, required 
filetype off                  

" set the runtime path to include Vundle and initialize 
set rtp+=~/.vim/bundle/Vundle.vim 

call vundle#begin() 
" alternatively, pass a path where Vundle should install plugins 
"call vundle#begin('~/some/path/here') 
" let Vundle manage Vundle, required 
Plugin 'VundleVim/Vundle.vim' 

"""""""""""""""""""""""""""""
" General plugins
"""""""""""""""""""""""""""""
" Navigation (CtrlP and Nerdtree)
Plugin 'ctrlpvim/ctrlp.vim' 
Plugin 'scrooloose/nerdtree' 
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" Plugin 'dyng/ctrlsf.vim'

" Commenting and text maniputation
Plugin 'tomtom/tcomment_vim' 
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-unimpaired'

" Syntax checking
Plugin 'scrooloose/syntastic'

" Colorscheme
Plugin 'jnurmine/Zenburn'
" Plugin 'altercation/vim-colors-solarized'

" Git control 
Plugin 'tpope/vim-fugitive'
" Plugin 'airblade/vim-gitgutter'

" Markdown plugins
Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

"""""""""""""""""""""""""""""
" Python plugins
"""""""""""""""""""""""""""""
" Plugin 'tmhedberg/SimpylFold'
" Plugin 'vim-scripts/indentpython.vim'
Plugin 'Valloric/YouCompleteMe'
" Plugin 'nvie/vim-flake8'
Plugin 'python-mode/python-mode' 

" All of your Plugins must be added before the following line 
call vundle#end()            " required 
filetype plugin indent on    

" To ignore plugin indent changes, instead use: 
"filetype plugin on 

" Put your non-Plugin stuff after this line 

" GENERAL setup
colorscheme zenburn

set encoding=utf-8
set nu
set colorcolumn=80

set wrap linebreak nolist textwidth=79

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Setup for plasticboy/vim-markdown
set conceallevel=2
let g:vim_markdown_math = 1
let g:vim_markdown_frontmatter = 1

" Setup for JamshedVesuna/vim-markdown-preview
" Map markdown preview to CTRL-M
let vim_markdown_preview_hotkey='<C-m>'
" Use grip for markdown preview
let vim_markdown_preview_github=1

" Setup for syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_sh_checkers=['bashate']

nnoremap <silent> <F5> :SyntasticToggle<CR>

" Use spaces instead of tabs, and keep the whitespace small
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab

" Switch between splits using ctr+j/k/l/h
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Substitue word with last yanked word
nnoremap <leader>p ciw<C-r>0<ESC> 

" Keep visual mode after indent
vnoremap > >gv
vnoremap < <gv

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

" NERDtree settings
" Toggle Nerdtree with C-T
map <C-T> :NERDTreeToggle<CR>
" Close Vim if the only window open is nerdtree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" PYTHON setup
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" Ensures that the autocomplete window goes away when youâ€™re done with it
let g:ycm_autoclose_preview_window_after_completion=1
let g:syntastic_python_checkers=['flake8', 'pyflakes']
let g:syntastic_aggregate_errors = 1

" Turn off python mode linting, duplicates with syntastic
" let g:pymode_lint_on_write = 0

" Define a shortcut for goto definition.
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

let python_highlight_all=1
syntax on

